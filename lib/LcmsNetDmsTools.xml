<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LcmsNetDmsTools</name>
    </assembly>
    <members>
        <member name="T:LcmsNetDmsTools.ExtensionMethods">
            <summary>
            Extension methods static class for LcmsNetDmsTools
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.ExtensionMethods.CastDBValTo``1(System.Object)">
            <summary>
            Simple cast that handles DBNull
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns>If value is DBNull, then returns default(t); otherwise casts value to T</returns>
        </member>
        <member name="M:LcmsNetDmsTools.ExtensionMethods.ConvertDBNull``1(System.Object,System.Func{System.Object,``0})">
            <summary>
            Conversion helper that handles DBNull
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="conversionFunction">Function to convert the value to T (should handle null)</param>
            <returns>Converted value</returns>
        </member>
        <member name="T:LcmsNetDmsTools.DMSDBTools">
            <summary>
            Class for interacting with DMS database
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSDBTools.CONST_DMS_SERVER_KEY">
            <summary>
            Key to access the DMS version string in the configuration dictionary.
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSDBTools.CONST_DMS_VERSION_KEY">
            <summary>
            Key to access the DMS version string in the configuration dictionary.
            </summary>
            <remarks>This is the name of the database to connect to</remarks>
        </member>
        <member name="F:LcmsNetDmsTools.DMSDBTools.CONST_DMS_PASSWORD_KEY">
            <summary>
            Key to access the encoded DMS password string in the configuration dictionary.
            </summary>
            <remarks>This is the password of SQL Server user LCMSNetUser</remarks>
        </member>
        <member name="P:LcmsNetDmsTools.DMSDBTools.LoadDatasets">
            <summary>
            Controls whether datasets are loaded when LoadCacheFromDMS() is called
            </summary>
        </member>
        <member name="P:LcmsNetDmsTools.DMSDBTools.LoadExperiments">
            <summary>
            Controls whether experiments are loaded when LoadCacheFromDMS() is called
            </summary>
        </member>
        <member name="P:LcmsNetDmsTools.DMSDBTools.RecentDatasetsMonthsToLoad">
            <summary>
            Number of months back to search when reading dataset names
            </summary>
            <remarks>Default is 12 months; use 0 to load all data</remarks>
        </member>
        <member name="P:LcmsNetDmsTools.DMSDBTools.RecentExperimentsMonthsToLoad">
            <summary>
            Number of months back to search when reading experiment information
            </summary>
            <remarks>Default is 18 months; use 0 to load all data</remarks>
        </member>
        <member name="P:LcmsNetDmsTools.DMSDBTools.EMSLProposalsRecentMonthsToLoad">
            <summary>
            Number of months back to load expired EMSL Proposals; defaults to '12', use '-1' to load all data
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.CloseConnection">
            <summary>
            Close the stored SqlConnection
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetConnection(System.String)">
            <summary>
            Get a SQLiteConnection, but control creation of new connections based on UseConnectionPooling
            </summary>
            <param name="connString"></param>
            <returns></returns>
        </member>
        <member name="T:LcmsNetDmsTools.DMSDBTools.SqlConnectionWrapper">
            <summary>
            A SqlConnection wrapper that only disposes in certain circumstances
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.SqlConnectionWrapper.#ctor(System.String)">
            <summary>
            Open a new connection, which will get closed on Dispose().
            </summary>
            <param name="connString"></param>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.SqlConnectionWrapper.#ctor(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Wrap an existing connection, which will stay open on Dispose().
            </summary>
            <param name="existingConnection"></param>
            <param name="failedConnectionAttemptMessage"></param>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.LoadConfiguration">
            <summary>
            Loads DMS configuration from file
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetConfigSetting(System.String,System.String)">
            <summary>
            Lookup the value for the given setting
            </summary>
            <param name="configName">Setting name</param>
            <param name="valueIfMissing">Value to return if configName is not defined in mConfiguration</param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetConnectionString">
            <summary>
            Gets DMS connection string from config file
            </summary>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetSingleColumnTableFromDMS(System.String,System.String)">
            <summary>
            Generic method to retrieve data from a single-column table in DMS
            </summary>
            <param name="cmdStr">SQL command to execute</param>
            <param name="connStr">Database connection string</param>
            <returns>List containing the table's contents</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetDataTable(System.String,System.String)">
            <summary>
            Retrieves a data table from DMS
            </summary>
            <param name="cmdStr">SQL command to retrieve table</param>
            <param name="connStr">DMS connection string</param>
            <returns>DataTable containing requested data</returns>
            <remarks>This tends to use more memory than directly reading and parsing data.</remarks>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.ExecuteSP(System.Data.SqlClient.SqlCommand,System.String)">
            <summary>
            Executes a stored procedure
            </summary>
            <param name="spCmd">SQL command object containing SP parameters</param>
            <param name="connStr">Connection string</param>
            <returns>SP result code</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.DecodePassword(System.String)">
            <summary>
            Decrypts password received from ini file
            </summary>
            <param name="enPwd">Encoded password</param>
            <returns>Clear text password</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetCartConfigNamesFromDMS">
            <summary>
            Gets a list of Cart Config Names from DMS and stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetWorkPackagesFromDMS">
            <summary>
            Gets a list of Work Packages from DMS and stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetCartListFromDMS">
            <summary>
            Gets a list of instrument carts from DMS and stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetColumnListFromDMS">
            <summary>
            Gets a list of active LC columns from DMS and stores in the cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetSepTypeListFromDMS">
            <summary>
            Gets a list of separation types from DMS and stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetDatasetTypeListFromDMS">
            <summary>
            Gets a list of dataset types from DMS ans stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetUserListFromDMS">
            <summary>
            Gets a list of active users from DMS and stores it in cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetProposalUsers">
            <summary>
            Get EMSL User Proposal IDs and associated users. Uses <see cref="P:LcmsNetDmsTools.DMSDBTools.EMSLProposalsRecentMonthsToLoad"/> to control how much data is loaded.
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetInstrumentListFromDMS">
            <summary>
            Gets a list of instruments from DMS
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.ConvertWellStringToInt(System.String)">
            <summary>
            Converts a letter/number or just number string representing a well/vial into an integer
            </summary>
            <param name="vialPosition">Input string</param>
            <returns>Integer position</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.CheckDMSConnection">
            <summary>
            Test if we can query each of the needed DMS tables/views.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.LoadCacheFromDMS">
            <summary>
            Loads all DMS data into cache
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetRequestedRunsFromDMS``1(LcmsNetData.Data.SampleQueryData)">
            <summary>
            Gets a list of samples (essentially requested runs) from DMS
            </summary>
            <remarks>Retrieves data from view V_Scheduled_Run_Export</remarks>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetMRMFilesFromDMS(System.String,System.Collections.Generic.List{LcmsNetData.Data.MRMFileData})">
            <summary>
            Adds data for block of MRM files to file data list
            </summary>
            <param name="fileIndxList">Comma-separated list of file indices needing data</param>
            <param name="fileData">ist of file names and contents; new data will be appended to this list</param>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.GetMRMFileListFromDMS(System.Int32,System.Int32)">
            <summary>
            Gets a list of MRM files to retrieve
            </summary>
            <param name="minID">Minimum request ID for MRM file search</param>
            <param name="maxID"></param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSDBTools.UpdateDMSCartAssignment(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates the cart assignment in DMS
            </summary>
            <param name="requestList">Comma-delimited string of request ID's (must be less than 8000 chars long)</param>
            <param name="cartName">Name of cart to assign (ignored for removing aasignment)</param>
            <param name="cartConfigName">Name of cart config name to assign</param>
            <param name="updateMode">TRUE for updating assignment; FALSE to clear assignment</param>
            <returns>TRUE for success; FALSE for error</returns>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.NoError">
            <summary>
            No Error - it's good
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.UsageTypeNotSet">
            <summary>
            Usage type is not set
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.EUSProposalIDEmpty">
            <summary>
            Usage type is EMSL User, and the Proposal ID is empty
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.EUSUserListEmpty">
            <summary>
            Usage type is EMSL User, and the user list is empty
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.LCCartNotSet">
            <summary>
            LC Cart is not set
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.LCCartConfigNotSet">
            <summary>
            LC Cart Config is not set
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidatorErrors.LCCartConfigNotValidForCart">
            <summary>
            LC Cart Config is not set
            </summary>
        </member>
        <member name="T:LcmsNetDmsTools.DMSSampleValidator">
            <summary>
            Validates a sample.
            </summary>
        </member>
        <member name="F:LcmsNetDmsTools.DMSSampleValidator.CONST_EMSL_USAGE_TYPE">
            <summary>
            Indicates this item is tied to a EMSL user proposal that is not tied to a request in DMS.
            </summary>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsSampleValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validates a sample based on DMS criteria.
            </summary>
            <param name="sample"></param>
            <returns>True if valid, false if invalid</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsSampleValidDetailed(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validates a sample based on DMS criteria.
            </summary>
            <param name="sample"></param>
            <returns>True if valid, false if invalid</returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsEMSLProposalIDValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validates EUS Proposal ID
            </summary>
            <param name="sample"></param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsEMSLUserValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validate EUS Users
            </summary>
            <param name="sample"></param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsEMSLUsageTypeValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validate EUS Usage
            </summary>
            <param name="sample"></param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsExperimentNameValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validate experiment name
            </summary>
            <param name="sample"></param>
            <returns></returns>
        </member>
        <member name="M:LcmsNetDmsTools.DMSSampleValidator.IsCartConfigValid(LcmsNetData.Data.SampleDataBasic)">
            <summary>
            Validate cart config setting
            </summary>
            <param name="sample"></param>
            <returns></returns>
        </member>
    </members>
</doc>
