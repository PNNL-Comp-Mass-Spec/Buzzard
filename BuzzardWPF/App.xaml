<Application xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             ShutdownMode="OnMainWindowClose"
             Startup="Application_Startup"
             Exit="Application_Exit"
             x:Class="BuzzardWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Application.Resources>
        <!--  When the logo is updated, you must also update the ".Save(ms, ImageFormat.Png)" line in DynamicSplash.xaml.cs  -->
        <BitmapImage x:Key="LogoImageSource" UriSource="Resources\logo_2017.png" />
        <BitmapImage x:Key="Monitor" UriSource="Resources\amphitheater-32.png" />
        <BitmapImage x:Key="SearchGreen" UriSource="Resources\amphitheater-32-green.png" />
        <BitmapImage x:Key="Collect" UriSource="Resources\trash-32.png" />
        <BitmapImage x:Key="SearchKey" UriSource="Resources\search-3-32.png" />
        <BitmapImage x:Key="Tools" UriSource="Resources\tool-box-32.png" />
        <BitmapImage x:Key="Trigger" UriSource="Resources\trigger.png" />
        <BitmapImage x:Key="Abort" UriSource="Resources\abort-32.png" />
        <BitmapImage x:Key="Filldown" UriSource="Resources\filldown.png" />
        <BitmapImage x:Key="FixDatasetNames" UriSource="Resources\movedataset.png" />
        <BitmapImage x:Key="Experiments" UriSource="Resources\experiments.png" />
        <BitmapImage x:Key="Buzzard" UriSource="Resources\buzzard.jpg" />

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Default" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#ADADAD" />
                                <Setter Property="BorderBrush" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Define general style that based is base on the default style of the button without a key reference  -->
        <Style BasedOn="{StaticResource Default}" TargetType="Button" />

        <Style x:Key="NarrowButtonStyle"
               BasedOn="{StaticResource Default}"
               TargetType="Button">
            <Setter Property="Width" Value="50" />
            <Setter Property="FontFamily" Value="Arial Narrow" />
        </Style>

        <Style x:Key="SimpleButtonStyle"
               BasedOn="{StaticResource Default}"
               TargetType="Button">
            <Setter Property="Width" Value="128" />
        </Style>

        <Style x:Key="SimpleTabItem" TargetType="TabItem">
            <Setter Property="FontFamily" Value="Arial Narrow" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="128" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="BorderBrush" Value="#FFFFFFFF" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DarkGray" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
