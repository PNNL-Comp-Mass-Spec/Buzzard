<UserControl
    x:Class="BuzzardWPF.Views.BuzzardGridView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:converters="clr-namespace:BuzzardWPF.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:BuzzardWPF.Data"
    xmlns:dmsData="clr-namespace:LcmsNetSDK.Data;assembly=LcmsNetSdk"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:BuzzardWPF.ViewModels"
    xmlns:cueBannerOverlay="clr-namespace:LcmsNetCommonControls.Controls.CueBannerOverlay;assembly=LcmsNetCommonControls"
    d:DesignHeight="267"
    d:DesignWidth="749.4"
    Background="{x:Null}"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance {x:Type viewModels:BuzzardGridViewModel}, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <converters:BooleanToDataGridVisibilityModeConverter x:Key="boolConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ByteToKBConverter x:Key="FileSizeConverter" />
        <converters:TabLockSwitchConverter x:Key="LockSwitchConverter" />
        <converters:WaitTimeToProgressValueConverter x:Key="ProgressBarConverter" />
        <converters:WaitTimeTextConverter x:Key="WaitTimeTextConverter" />
        <converters:EmptyRequestNameConverter x:Key="RequestNameConverter" />
        <converters:ShowRowDetailConverter x:Key="ShowRowDetailsConverter" />
        <converters:BoolToObjectConverter
            x:Key="ShowDetailButtonContentConverter"
            FalseContent="Show Row Details"
            NullContent="Not Possible"
            TrueContent="Hide Details" />

        <!--
            * This template lets us leverage the ability to display a specific
            * tab and switch between tabs as we want, while hiding the tab
            * selection abilities from the user.
        -->
        <ControlTemplate x:Key="TabControlTemplate" TargetType="TabControl">
            <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
        </ControlTemplate>

        <Style TargetType="Button">
            <Setter Property="MinWidth" Value="95" />
            <Setter Property="MinHeight" Value="32" />
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FFE0E8FF" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>

            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="LightSteelBlue" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
            </Style.Triggers>

            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <DropShadowEffect
            x:Key="ShadowEffect"
            BlurRadius="3"
            Direction="-50"
            Opacity="0.8"
            RenderingBias="Performance"
            ShadowDepth="5"
            Color="DarkGray" />

        <converters:RedudantRequestBackgroundConverter x:Key="RedundantBackgroundConverter" />

        <DataTemplate x:Key="EMSLUserTemplate" DataType="dmsData:ProposalUser">
            <TextBlock Margin="2,2,6,2" Text="{Binding Path=UserName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>

        <DataTemplate x:Key="RowDetailsTemplate" DataType="data:BuzzardDataset">
            <Grid Margin="0,0,0,14">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <GroupBox
                    Margin="2"
                    Padding="1,2,1,1"
                    Header="EMSL">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" MinWidth="65" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" MinWidth="65" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition
                                Width="*"
                                MinWidth="200"
                                MaxWidth="350" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Column="0"
                            Margin="2"
                            VerticalAlignment="Center">
                            Usage:
                        </Label>

                        <TextBlock
                            Grid.Column="1"
                            Margin="2,2,8,2"
                            VerticalAlignment="Center"
                            Text="{Binding Path=DMSData.EMSLUsageType}" />
                        <Label
                            Grid.Column="2"
                            Margin="2"
                            VerticalAlignment="Center">
                            Proposal ID:
                        </Label>

                        <TextBlock
                            Grid.Column="3"
                            Margin="2,2,8,2"
                            VerticalAlignment="Center"
                            Text="{Binding Path=DMSData.EMSLProposalID}" />
                        <Label
                            Grid.Column="4"
                            Margin="2"
                            VerticalAlignment="Center">
                            Proposal Users:
                        </Label>

                        <ScrollViewer
                            Grid.Column="5"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Disabled">
                            <ListBox ItemTemplate="{StaticResource EMSLUserTemplate}" ItemsSource="{Binding Path=EMSLProposalUsers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </ScrollViewer>
                    </Grid>
                </GroupBox>
            </Grid>
        </DataTemplate>

        <!--  The CollectionViewSource wrapper allows us to set the default sort (Modification Date descending)  -->
        <CollectionViewSource x:Key="MyItemsViewSource" Source="{Binding Path=Datasets, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Descending" PropertyName="RunFinish" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="5"
            Margin="5"
            Orientation="Horizontal">

            <Button
                Command="{Binding ClearAllDatasetsCommand}"
                Content="Clear All"
                FontFamily="Arial"
                FontSize="14"
                Style="{StaticResource SimpleButtonStyle}" />
            <Button
                Command="{Binding ClearSelectedDatasetsCommand}"
                Content="Clear Selected"
                FontFamily="Arial"
                FontSize="14"
                Style="{StaticResource SimpleButtonStyle}" />
            <Button
                Click="SelectNoDatasets_Click"
                IsEnabled="{Binding DatasetSelected}"
                Content="Select None"
                FontFamily="Arial"
                FontSize="14"
                Style="{StaticResource SimpleButtonStyle}" />
            <Button
                Click="SelectAllDatasets_Click"
                IsEnabled="{Binding CanSelectDatasets}"
                Content=" Select All"
                FontFamily="Arial"
                FontSize="14"
                Style="{StaticResource SimpleButtonStyle}" />
            <Button
                Width="153"
                Margin="5,5,5,0"
                Command="{Binding InvertShowDetailsCommand}"
                Content="{Binding Path=ShowGridItemDetail, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowDetailButtonContentConverter}}"
                FontFamily="Arial"
                Style="{StaticResource SimpleButtonStyle}" />
        </StackPanel>

        <!-- The following is a dummy element to allow access to BuzzardGridViewModel properties via the parent datacontext. -->
        <FrameworkElement Grid.Row="0" Grid.Column="0" x:Name="BaseDC" />

        <DataGrid
            x:Name="DatasetDataGrid"
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="5"
            Margin="6,4,6,1"
            HorizontalContentAlignment="Center"
            AlternatingRowBackground="WhiteSmoke"
            AlternationCount="1"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CellStyle="{StaticResource DataGridCellStyle}"
            IsTextSearchEnabled="True"
            ItemsSource="{Binding Source={StaticResource MyItemsViewSource}}"
            RowDetailsTemplate="{StaticResource RowDetailsTemplate}"
            RowDetailsVisibilityMode="{Binding Path=ShowGridItemDetail, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowRowDetailsConverter}}"
            RowStyle="{StaticResource DataGridRowStyle}"
            FrozenColumnCount="2"
            SelectionChanged="DatasetDataGrid_OnSelectionChanged">

            <DataGrid.Columns>
                <!--  Dataset Information  -->
                <DataGridTextColumn
                    Binding="{Binding Path=DMSData.RequestID}"
                    Header="Request ID"
                    IsReadOnly="True" />
                <DataGridTemplateColumn
                    CanUserSort="True"
                    Header="Dataset Name"
                    SortDirection="Ascending"
                    SortMemberPath="DMSData.DatasetName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                VerticalAlignment="Top"
                                Foreground="{Binding Path=NotOnlyDatasource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RedundantBackgroundConverter}}"
                                Text="{Binding Path=DMSData.DatasetName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Binding="{Binding Path=DMSData.RequestName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RequestNameConverter}}"
                    Header="Request Name"
                    IsReadOnly="True" />

                <DataGridTextColumn
                    Width="100"
                    Binding="{Binding DMSStatus}"
                    Header="DMS Status"
                    IsReadOnly="True"
                    Visibility="Collapsed" />
                <DataGridTextColumn
                    Binding="{Binding TriggerFileStatus}"
                    Header="Trigger File Status"
                    IsReadOnly="True"
                    Visibility="Collapsed" />

                <DataGridTextColumn
                    Binding="{Binding DatasetStatus}"
                    Header="Status"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding TriggerCreationWarning}"
                    Header="Warning"
                    IsReadOnly="True" />

                <DataGridTemplateColumn
                    MinWidth="130"
                    CanUserSort="True"
                    Header="Trigger File Creation"
                    SortDirection="Ascending"
                    SortMemberPath="SecondsTillTriggerCreation">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ProgressBar
                                    Margin="2"
                                    Panel.ZIndex="0"
                                    Foreground="#FF01D428"
                                    Maximum="100"
                                    Minimum="0">
                                    <ProgressBar.Value>
                                        <MultiBinding Converter="{StaticResource ProgressBarConverter}">
                                            <Binding
                                                Mode="OneWay"
                                                NotifyOnSourceUpdated="True"
                                                Path="WaitTimePercentage"
                                                UpdateSourceTrigger="PropertyChanged" />
                                            <Binding
                                                Mode="OneWay"
                                                NotifyOnSourceUpdated="True"
                                                Path="DatasetStatus"
                                                UpdateSourceTrigger="PropertyChanged" />
                                            <Binding
                                                Mode="OneWay"
                                                NotifyOnSourceUpdated="True"
                                                Path="DatasetSource"
                                                UpdateSourceTrigger="PropertyChanged" />
                                        </MultiBinding>
                                    </ProgressBar.Value>
                                </ProgressBar>

                                <TextBlock
                                    Margin="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Panel.ZIndex="1"
                                    Background="Transparent"
                                    Effect="{StaticResource ShadowEffect}"
                                    FontSize="13"
                                    FontWeight="Bold">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource WaitTimeTextConverter}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="SecondsTillTriggerCreation"
                                                UpdateSourceTrigger="PropertyChanged" />
                                            <Binding
                                                Mode="OneWay"
                                                Path="DatasetStatus"
                                                UpdateSourceTrigger="PropertyChanged" />
                                            <Binding
                                                Mode="OneWay"
                                                Path="DatasetSource"
                                                UpdateSourceTrigger="PropertyChanged" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                    <TextBlock.Foreground>
                                        <!-- This is needed for the ColorAnimation defined below (including the x:Name) -->
                                        <SolidColorBrush x:Name="ForegroundBrush" Color="Black" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding PulseText}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!--
                                                    * On RepeatBehavior, leaving the x out of it caused
                                                    * it to repeat forever on the prototype.
                                                    * -FCT
                                                -->
                                                <ColorAnimation
                                                    AutoReverse="True"
                                                    FillBehavior="Stop"
                                                    RepeatBehavior="2x"
                                                    Storyboard.TargetName="ForegroundBrush"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#FF1100AF"
                                                    To="#FFAF0011"
                                                    Duration="0:0:0.67" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Width="115"
                    Binding="{Binding ExperimentName}"
                    Header="Experiment Name"
                    IsReadOnly="True" />

                <DataGridTemplateColumn
                    MinWidth="125"
                    CanUserSort="True"
                    Header="Operator"
                    SortDirection="Ascending"
                    SortMemberPath="Operator">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.DmsData.OperatorData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="100"
                    CanUserSort="True"
                    Header="Dataset Type"
                    SortDirection="Ascending"
                    SortMemberPath="DMSData.DatasetType">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TabControl SelectedIndex="{Binding Path=., Converter={StaticResource LockSwitchConverter}}" Template="{StaticResource TabControlTemplate}">
                                <TabItem>
                                    <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.DmsData.DatasetTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=DMSData.DatasetType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                                </TabItem>
                                <TabItem>
                                    <TextBlock VerticalAlignment="Top" Text="{Binding Path=DMSData.DatasetType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </TabItem>
                            </TabControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="100"
                    CanUserSort="True"
                    Header="LC Column"
                    SortDirection="Ascending"
                    SortMemberPath="LCColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.DmsData.ColumnData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=LCColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="125"
                    CanUserSort="True"
                    Header="Instrument Name"
                    SortDirection="Ascending"
                    SortMemberPath="Instrument">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.DmsData.InstrumentData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=Instrument, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    MinWidth="200"
                    CanUserSort="True"
                    Header="Separation Type"
                    SortDirection="Ascending"
                    SortMemberPath="SeparationType">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.DmsData.SeparationTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=SeparationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Binding="{Binding CartName}"
                    Header="Cart"
                    IsReadOnly="True" />
                <!--
                <DataGridTemplateColumn
                    MinWidth="100"
                    CanUserSort="True"
                    Header="Cart"
                    SortDirection="Ascending"
                    SortMemberPath="CartName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.CartNameListSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=CartName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                -->
                <DataGridTemplateColumn
                    MinWidth="100"
                    CanUserSort="True"
                    Header="LC Cart Config"
                    SortDirection="Ascending"
                    SortMemberPath="CartConfigName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source={x:Reference BaseDC}, Path=DataContext.CartConfigNameListSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=CartConfigName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" cueBannerOverlay:CueBannerService.CueBanner="Select">
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=CartConfigStatus}" Value="True">
                                                <Setter Property="Background" Value="HotPink" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    MinWidth="100"
                    Binding="{Binding InterestRating}"
                    Header="Interest Rating"
                    IsReadOnly="True" />

                <!--  File Information  -->
                <DataGridTextColumn
                    Binding="{Binding Path=FileSize, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FileSizeConverter}}"
                    Header="File Size"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding Extension}"
                    Header="Extension"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding RunStart}"
                    Header="Created"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding RunFinish}"
                    Header="Last Modified"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding FilePath}"
                    Header="Source Data Path"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding CaptureSubfolderPath}"
                    Header="Relative Parent Path"
                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Width="164"
                Height="48"
                Command="{Binding BringUpExperimentsCommand}"
                Style="{StaticResource SimpleButtonStyle}">
                <DockPanel>
                    <Image
                        Margin="5"
                        DockPanel.Dock="Left"
                        Source="{StaticResource Experiments}"
                        Stretch="None" />
                    <Label
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        FontSize="14">
                        Experiments
                    </Label>
                </DockPanel>
            </Button>

            <Button
                Grid.Column="1"
                Width="164"
                Height="48"
                Command="{Binding OpenFilldownCommand}"
                Style="{StaticResource SimpleButtonStyle}">

                <DockPanel>
                    <Image
                        Margin="5"
                        DockPanel.Dock="Left"
                        Source="{StaticResource Filldown}"
                        Stretch="None" />
                    <Label
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        FontSize="14">
                        Filldown
                    </Label>
                </DockPanel>
            </Button>
            <Button
                Grid.Column="2"
                Width="164"
                Height="48"
                Command="{Binding CreateTriggersCommand}"
                IsEnabled="True"
                Style="{StaticResource SimpleButtonStyle}"
                Visibility="{Binding Path=IsNotCreatingTriggerFiles, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <DockPanel>
                    <Image
                        Margin="5"
                        DockPanel.Dock="Left"
                        Source="{StaticResource Trigger}"
                        Stretch="None" />
                    <Label
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        FontSize="14">
                        Create Trigger
                    </Label>
                </DockPanel>
            </Button>

            <Button
                Grid.Column="2"
                Width="120"
                Height="48"
                HorizontalAlignment="Center"
                BorderBrush="#FFED2020"
                Command="{Binding AbortCommand}"
                Foreground="#FFC61818"
                Style="{StaticResource SimpleButtonStyle}"
                Visibility="{Binding Path=IsCreatingTriggerFiles, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <DockPanel>
                    <Image
                        Margin="5"
                        DockPanel.Dock="Left"
                        Source="{StaticResource Abort}"
                        Stretch="None" />
                    <Label
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        FontSize="14">
                        Abort
                    </Label>
                </DockPanel>
            </Button>

            <Button
                Grid.Column="3"
                Width="190"
                Height="48"
                Command="{Binding FixDatasetNamesCommand}"
                Style="{StaticResource SimpleButtonStyle}">
                <DockPanel>
                    <Image
                        Margin="5"
                        DockPanel.Dock="Left"
                        Source="{StaticResource FixDatasetNames}"
                        Stretch="None" />
                    <Label
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        FontSize="14">
                        Fix Dataset Names
                    </Label>
                </DockPanel>
            </Button>
        </Grid>
    </Grid>
</UserControl>
